const web3 = require("./web3")
const getSize = require('get-folder-size');
require('dotenv').config()

const privateKeysign=process.env.PRIVATE_KEY
const bytecode=process.env.BYTECODE
const total=process.env.MAX_DEPLOYMENTS
const MAX_SIZE=process.env.MAX_SIZE
const DATA_PATH=process.env.DATA_PATH

// 10 length
// const bytecode = "0x608060405234801561001057600080fd5b5060008090505b600a811015610062577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600082600a8110151561005057fe5b01819055508080600101915050610017565b5060ce806100716000396000f3fe6080604052600436106039576000357c01000000000000000000000000000000000000000000000000000000009004806371e5ee5f14603e575b600080fd5b348015604957600080fd5b50607360048036036020811015605e57600080fd5b81019080803590602001909291905050506089565b6040518082815260200191505060405180910390f35b600081600a81101515609757fe5b01600091509050548156fea165627a7a72305820770ed8ddebe5bffebbdb1048c64a8d3550cbc06919e149942acb536df05790660029";
// 200 length
// const bytecode = "0x608060405234801561001057600080fd5b5060008090505b60c8811015610062577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60008260c88110151561005057fe5b01819055508080600101915050610017565b5060ce806100716000396000f3fe6080604052600436106039576000357c01000000000000000000000000000000000000000000000000000000009004806371e5ee5f14603e575b600080fd5b348015604957600080fd5b50607360048036036020811015605e57600080fd5b81019080803590602001909291905050506089565b6040518082815260200191505060405180910390f35b60008160c881101515609757fe5b01600091509050548156fea165627a7a7230582040546814800ea1378935d44590b4165302ecd996201dd47c63698a2ae510ec600029";
// 100 length
// const bytecode = "0x608060405234801561001057600080fd5b5060008090505b6064811015610062577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60008260648110151561005057fe5b01819055508080600101915050610017565b5060ce806100716000396000f3fe6080604052600436106039576000357c01000000000000000000000000000000000000000000000000000000009004806371e5ee5f14603e575b600080fd5b348015604957600080fd5b50607360048036036020811015605e57600080fd5b81019080803590602001909291905050506089565b6040518082815260200191505060405180910390f35b600081606481101515609757fe5b01600091509050548156fea165627a7a72305820d20a09ae383600fe329ca43fd462c67fbadcddf9d5d7a259824ab822d8e7137c0029";
// 500 length
// const bytecode = "0x608060405234801561001057600080fd5b5060008090505b6101f4811015610064577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6000826101f48110151561005257fe5b01819055508080600101915050610017565b5060cf806100736000396000f3fe6080604052600436106039576000357c01000000000000000000000000000000000000000000000000000000009004806371e5ee5f14603e575b600080fd5b348015604957600080fd5b50607360048036036020811015605e57600080fd5b81019080803590602001909291905050506089565b6040518082815260200191505060405180910390f35b6000816101f481101515609857fe5b01600091509050548156fea165627a7a72305820a57afd9c2ad6e5c4f8a76e0cb7e3e3f8814cacf9f84885cd9d2a3503c7772f4b0029";
// 1500 length
// const bytecode = "0x608060405234801561001057600080fd5b5060008090505b6105dc811015610064577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6000826105dc8110151561005257fe5b01819055508080600101915050610017565b5060cf806100736000396000f3fe6080604052600436106039576000357c01000000000000000000000000000000000000000000000000000000009004806371e5ee5f14603e575b600080fd5b348015604957600080fd5b50607360048036036020811015605e57600080fd5b81019080803590602001909291905050506089565b6040518082815260200191505060405180910390f35b6000816105dc81101515609857fe5b01600091509050548156fea165627a7a7230582033d513e876df180d54f5102ba9778d80d02e81fad2356795e4d3272f0984674c0029";
// const bytecode = "0x608060405234801561001057600080fd5b50610150806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80632e64cec11461003b5780636057361d14610059575b600080fd5b610043610075565b60405161005091906100d9565b60405180910390f35b610073600480360381019061006e919061009d565b61007e565b005b60008054905090565b8060008190555050565b60008135905061009781610103565b92915050565b6000602082840312156100b3576100b26100fe565b5b60006100c184828501610088565b91505092915050565b6100d3816100f4565b82525050565b60006020820190506100ee60008301846100ca565b92915050565b6000819050919050565b600080fd5b61010c816100f4565b811461011757600080fd5b5056fea2646970667358221220404e37f487a89a932dca5e77faaf6ca2de3b991f93d230604b1b8daaef64766264736f6c63430008070033";

var tx;
var count = 0;
var initialSize;

async function f(){
    if(MAX_SIZE === undefined && total === undefined) {
        console.log("MAX_SIZE and MAX_DEPLOYMENTS fields not configured. Please configure either one of them, or both.");
        process.exit(1);;
    }
    console.log(MAX_SIZE, " : ", total);

    const accounts = await web3.eth.getAccounts();
    console.log("Account: ", accounts[0])
    console.log("Balance: ",await web3.eth.getBalance(accounts[0]))

    tx={
        from:accounts[0],
        gas:20000000,       // gasLimit is set high to deploy large storage contracts
        data: bytecode,
        // gasPrice: 10 
        // maxFeePerGas: '30000000007',
        // maxPriorityFeePerGas: '30000000000'
    };

    if(MAX_SIZE !== undefined) {
        getSize(DATA_PATH, (err, size) => {
            if (err) { throw err; }
            console.log((size / 1024).toFixed(2) + ' KB');
            initialSize = (size / 1024).toFixed(2);
        });
    }

    for(let i=0;;i++) {
        if(total !== undefined && count >= total) {
            console.log("Max deployments done!!!");
            process.exit(1);
        }
        await conc();
    }

}

async function conc() { 
    let tx1= await web3.eth.accounts.signTransaction(tx, privateKeysign);
    let tx2= await tx1.rawTransaction;

    let tx3=await web3.eth.sendSignedTransaction(tx2)
    // console.log(tx3);
    // console.log("MAX_SIZE: ", MAX_SIZE === undefined);
    if(MAX_SIZE !== undefined) {
        getSize(DATA_PATH, (err, size) => {
            if (err) { throw err; }
            console.log((size / 1024).toFixed(2) + ' KB');
            if(((size / 1024).toFixed(2) - initialSize) >= MAX_SIZE) {
                console.log("Size limit reached!!!");
                process.exit(1);
            }
        });
    }
    count++;
}

f();